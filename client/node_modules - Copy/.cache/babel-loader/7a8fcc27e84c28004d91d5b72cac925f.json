{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ionut\\\\Career+College\\\\Lucrare Licenta\\\\classic-movies-streaming\\\\client\\\\src\\\\pages\\\\MovieGrid\\\\MovieGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport GridCard from \"../../components/GridCard/GridCard\";\nimport \"./MovieGrid.scss\";\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieGrid() {\n  _s();\n\n  const [movies, setMovies] = useState(\"false\");\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    async function fetchMovies() {\n      const result = await axios.get(`https://localhost:4000/api/movies`);\n      setMovies(result);\n      console.log(result);\n      setIsLoading(false);\n    }\n\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), !isLoading && movies.map(movie => /*#__PURE__*/_jsxDEV(GridCard, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieGrid, \"yC+blq8OSnDMwYhx7+ADg6tRfQg=\");\n\n_c = MovieGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGrid\");","map":{"version":3,"sources":["C:/Ionut/Career+College/Lucrare Licenta/classic-movies-streaming/client/src/pages/MovieGrid/MovieGrid.jsx"],"names":["NavBar","Footer","GridCard","React","useEffect","useState","axios","MovieGrid","movies","setMovies","isLoading","setIsLoading","fetchMovies","result","get","console","log","map","movie"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,OAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeQ,WAAf,GAA6B;AACzB,YAAMC,MAAM,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,mCAAX,CAArB;AAEAL,MAAAA,SAAS,CAACI,MAAD,CAAT;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDC,IAAAA,WAAW;AACd,GATQ,EASN,EATM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAACF,SAAD,IACGF,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACZ,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,CAHR,eAOI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA1BuBX,S;;KAAAA,S","sourcesContent":["import NavBar from \"../../components/NavBar/NavBar\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport GridCard from \"../../components/GridCard/GridCard\";\r\nimport \"./MovieGrid.scss\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\n\r\nexport default function MovieGrid() {\r\n\r\n    const [movies, setMovies] = useState(\"false\");\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchMovies() {\r\n            const result = await axios.get(`https://localhost:4000/api/movies`);\r\n\r\n            setMovies(result);\r\n            console.log(result);\r\n            setIsLoading(false);\r\n        }\r\n        fetchMovies();\r\n    }, [])\r\n    return (\r\n        <div className=\"grid\">\r\n            <NavBar />\r\n            {!isLoading &&\r\n                movies.map(movie => (\r\n                    <GridCard movie={movie} />\r\n                ))\r\n            }\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}