{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst UpdateAll = () => {\n  UpdateBest();\n  UpdateNewest();\n  UpdateGolden();\n};\n\n_c = UpdateAll;\n\nconst UpdateBest = () => {\n  const updateBestCarousel = async () => {\n    try {\n      const res = await axios.put(`http://localhost:4000/api/carousels/rating`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  updateBestCarousel();\n};\n\n_c2 = UpdateBest;\n\nconst updateByDirector = director => {\n  const updateDirectorCarousel = async () => {\n    try {\n      const res = await axios.put(`http://localhost:4000/api/carousels/` + director);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  updateDirectorCarousel();\n};\n\nconst UpdateNewest = () => {\n  const updateNewestCarousel = async () => {\n    try {\n      const res = await axios.put(`http://localhost:4000/api/carousels/newest`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  updateNewestCarousel();\n};\n\n_c3 = UpdateNewest;\n\nconst UpdateGolden = () => {\n  const updateGoldenCarousel = async () => {\n    try {\n      const res = await axios.put(`http://localhost:4000/api/carousels/golden`);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  updateGoldenCarousel();\n};\n\n_c4 = UpdateGolden;\n\nconst UseRandomMovie = () => {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/movies/random`, {});\n        setMovie(res.data[0]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMovie();\n  }, []);\n};\n\n_s(UseRandomMovie, \"vjn7l2Xfyv8U759KvgOto7g+Dfw=\");\n\n_c5 = UseRandomMovie;\nexport { UpdateAll, updateByDirector };\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"UpdateAll\");\n$RefreshReg$(_c2, \"UpdateBest\");\n$RefreshReg$(_c3, \"UpdateNewest\");\n$RefreshReg$(_c4, \"UpdateGolden\");\n$RefreshReg$(_c5, \"UseRandomMovie\");","map":{"version":3,"sources":["C:/Ionut/Career + College/Lucrare Licenta/classic-movies-streaming/client/src/utils/apiCalls.js"],"names":["axios","useState","useEffect","UpdateAll","UpdateBest","UpdateNewest","UpdateGolden","updateBestCarousel","res","put","err","console","log","updateByDirector","director","updateDirectorCarousel","updateNewestCarousel","updateGoldenCarousel","UseRandomMovie","movie","setMovie","getMovie","get","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpBC,EAAAA,UAAU;AACVC,EAAAA,YAAY;AACZC,EAAAA,YAAY;AACf,CAJD;;KAAMH,S;;AAKN,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMG,kBAAkB,GAAG,YAAY;AACnC,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,4CAAX,CAAlB;AACH,KAFD,CAEE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAND;;AAOAH,EAAAA,kBAAkB;AACrB,CAVD;;MAAMH,U;;AAYN,MAAMS,gBAAgB,GAAIC,QAAD,IAAa;AAElC,QAAMC,sBAAsB,GAAG,YAAY;AACvC,QAAI;AACA,YAAMP,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,sCAAD,GAAyCK,QAAnD,CAAlB;AACH,KAFD,CAEE,OAAOJ,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAND;;AAOAK,EAAAA,sBAAsB;AACzB,CAVD;;AAYA,MAAMV,YAAY,GAAG,MAAM;AACnB,QAAMW,oBAAoB,GAAG,YAAY;AACrC,QAAI;AACA,YAAMR,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,4CAAX,CAAlB;AACH,KAFD,CAEE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAND;;AAOAM,EAAAA,oBAAoB;AAC3B,CATD;;MAAMX,Y;;AAWN,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMW,oBAAoB,GAAG,YAAW;AACpC,QAAI;AACA,YAAMT,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,4CAAX,CAAlB;AACH,KAFD,CAEE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAND;;AAOAO,EAAAA,oBAAoB;AACvB,CATD;;MAAMX,Y;;AAWN,MAAMY,cAAc,GAAG,MAAK;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAEHC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMmB,QAAQ,GAAG,YAAY;AAC5B,UAAI;AACH,cAAMb,GAAG,GAAG,MAAMR,KAAK,CAACsB,GAAN,CAAW,yCAAX,EAAqD,EAArD,CAAlB;AAEAF,QAAAA,QAAQ,CAACZ,GAAG,CAACe,IAAJ,CAAS,CAAT,CAAD,CAAR;AACA,OAJD,CAIE,OAAOb,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD,KARD;;AASAW,IAAAA,QAAQ;AACR,GAXQ,EAWP,EAXO,CAAT;AAeA,CAlBD;;GAAMH,c;;MAAAA,c;AAmBN,SACIf,SADJ,EAEIU,gBAFJ","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst UpdateAll = () => {\r\n    UpdateBest();\r\n    UpdateNewest();\r\n    UpdateGolden();\r\n}\r\nconst UpdateBest = () => {\r\n\r\n    const updateBestCarousel = async () => {\r\n        try {\r\n            const res = await axios.put(`http://localhost:4000/api/carousels/rating`)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    updateBestCarousel();\r\n}\r\n\r\nconst updateByDirector = (director) =>{\r\n    \r\n    const updateDirectorCarousel = async () => {\r\n        try {\r\n            const res = await axios.put(`http://localhost:4000/api/carousels/` + director)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    updateDirectorCarousel();\r\n}\r\n\r\nconst UpdateNewest = () => {\r\n        const updateNewestCarousel = async () => {\r\n            try {\r\n                const res = await axios.put(`http://localhost:4000/api/carousels/newest`);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        updateNewestCarousel();\r\n}\r\n\r\nconst UpdateGolden = () => {\r\n    const updateGoldenCarousel = async () =>{\r\n        try {\r\n            const res = await axios.put(`http://localhost:4000/api/carousels/golden`);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    updateGoldenCarousel();\r\n}\r\n\r\nconst UseRandomMovie = () =>{\r\n    const [movie, setMovie] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getMovie = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axios.get(`http://localhost:4000/api/movies/random`, {\r\n\t\t\t\t});\r\n\t\t\t\tsetMovie(res.data[0]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetMovie()\r\n\t},[])\r\n\r\n\r\n\r\n}\r\nexport {\r\n    UpdateAll,\r\n    updateByDirector\r\n}"]},"metadata":{},"sourceType":"module"}