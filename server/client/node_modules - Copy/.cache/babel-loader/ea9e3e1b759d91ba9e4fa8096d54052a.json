{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ionut\\\\Career + College\\\\Lucrare Licenta\\\\classic-movies-streaming\\\\client\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../YoutubeEmbed/YoutubeEmbeded\";\nimport YoutubeEmbed from '../YoutubeEmbed/YoutubeEmbeded';\nimport \"./Card.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n\n  let {\n    index,\n    movie\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false);\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:4000/api/movies/find\" + movie);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      left: isHovered && index * 225 - 50 + index * 2.5\n    },\n    onMouseEnter: () => {\n      setIsHovered(true);\n    },\n    onMouseLeave: () => {\n      setIsHovered(false);\n    },\n    children: isHovered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n        embedId: movie.trailer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rating\",\n          children: [movie.rating, \"\\u2B50\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"desc\",\n        children: movie.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre\",\n        children: movie.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.img,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"kc8+hhKG3+iGUxqsVUryptgPYnY=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Ionut/Career + College/Lucrare Licenta/classic-movies-streaming/client/src/components/Card/Card.jsx"],"names":["React","useState","useEffect","YoutubeEmbed","Card","index","movie","isHovered","setIsHovered","getMovie","res","axios","get","err","console","log","left","trailer","duration","rating","year","desc","genre","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gCAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,aAAP;;;AAEA,eAAe,SAASC,IAAT,OAAgC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAkB;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,QAAQ,GAAG,YAAS;AACtB,UAAG;AACC,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,0CAAwCN,KAAlD,CAAlB;AACH,OAFD,CAEC,OAAMO,GAAN,EAAU;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAND;AAOH,GARQ,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AACI,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAET,SAAS,IAAIF,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmBA,KAAK,GAAG;AAAhD,KADX;AAEI,IAAA,YAAY,EAAE,MAAM;AAAEG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,KAF9C;AAGI,IAAA,YAAY,EAAE,MAAM;AAAEA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,KAH/C;AAAA,cAIKD,SAAS,gBACN;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAED,KAAK,CAACW;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,oBAAOX,KAAK,CAACY;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,qBAA0BZ,KAAK,CAACa,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAOb,KAAK,CAACc;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACKd,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,cATJ,eAYI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACKf,KAAK,CAACgB;AADX;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADM,gBAiBN;AAAK,MAAA,GAAG,EAAEhB,KAAK,CAACiB,GAAhB;AACA,MAAA,GAAG,EAAC;AADJ;AAAA;AAAA;AAAA;AAAA;AArBR;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAvCuBnB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"../YoutubeEmbed/YoutubeEmbeded\"\r\nimport YoutubeEmbed from '../YoutubeEmbed/YoutubeEmbeded';\r\nimport \"./Card.scss\";\r\n\r\nexport default function Card({ index, movie }) {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const getMovie = async()=>{\r\n            try{\r\n                const res = await axios.get(\"http://localhost:4000/api/movies/find\"+movie)\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='card'\r\n            style={{ left: isHovered && index * 225 - 50 + index * 2.5 }}\r\n            onMouseEnter={() => { setIsHovered(true) }}\r\n            onMouseLeave={() => { setIsHovered(false) }}>\r\n            {isHovered ? (\r\n                <>\r\n                    <YoutubeEmbed embedId={movie.trailer} />\r\n\r\n                    <div className=\"cardInfo\">\r\n                        <span>{movie.duration}</span>\r\n                        <span className='rating'>{movie.rating}‚≠ê</span>\r\n                        <span>{movie.year}</span>\r\n\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                        {movie.desc}\r\n                    </div>\r\n                    <div className=\"genre\">\r\n                        {movie.genre}\r\n                    </div>\r\n                </>\r\n            ) : <img src={movie.img}\r\n                alt=\"\" />}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}