{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst UpdateAll = () => {\n  UpdateBest();\n  UpdateNewest();\n};\n\n_c = UpdateAll;\n\nconst UpdateBest = () => {\n  _s();\n\n  const [Carousel, setCarousel] = useState([]);\n  useEffect(() => {\n    const updateBestCarousel = async () => {\n      try {\n        const res = await axios.put(`http://localhost:4000/api/carousels/rating`).then();\n        setCarousel(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    updateBestCarousel();\n  });\n};\n\n_s(UpdateBest, \"Em4fMUXztEdayMl4GPDqdt1UIuA=\");\n\n_c2 = UpdateBest;\n\nconst GetHomePageCarousels = () => {\n  _s2();\n\n  const [Carousels, setCarousels] = useState([]);\n  const [genre, setGenre] = useState(null);\n  useEffect(() => {\n    const getRandomCarousels = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/carousels${genre ? \"genre=\" + genre : \"\"}`);\n        setCarousels(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getRandomCarousels();\n  }, [genre]);\n};\n\n_s2(GetHomePageCarousels, \"6lUgGwy02J716eCyTEtApMUSi2Q=\");\n\n_c3 = GetHomePageCarousels;\n\nconst UpdateNewest = () => {\n  _s3();\n\n  const [NewestCarousel, setNewestCarousel] = useState([]);\n  useEffect(() => {\n    const updateNewestCarousel = async () => {\n      try {\n        const res = await axios.put(`http://localhost:4000/api/carousels/newest`);\n        setNewestCarousel(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    updateNewestCarousel();\n  });\n};\n\n_s3(UpdateNewest, \"HeXvdzz9mMqzykhc8cJCe9uP5bs=\");\n\n_c4 = UpdateNewest;\nexport { UpdateAll };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UpdateAll\");\n$RefreshReg$(_c2, \"UpdateBest\");\n$RefreshReg$(_c3, \"GetHomePageCarousels\");\n$RefreshReg$(_c4, \"UpdateNewest\");","map":{"version":3,"sources":["C:/Ionut/Career + College/Lucrare Licenta/classic-movies-streaming/client/src/utils/apiCalls.js"],"names":["axios","useState","useEffect","UpdateAll","UpdateBest","UpdateNewest","Carousel","setCarousel","updateBestCarousel","res","put","then","data","err","console","log","GetHomePageCarousels","Carousels","setCarousels","genre","setGenre","getRandomCarousels","get","NewestCarousel","setNewestCarousel","updateNewestCarousel"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpBC,EAAAA,UAAU;AACVC,EAAAA,YAAY;AACf,CAHD;;KAAMF,S;;AAIN,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,kBAAkB,GAAG,YAAY;AACnC,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,4CAAX,EAAwDC,IAAxD,EAAlB;AAEAJ,QAAAA,WAAW,CAACE,GAAG,CAACG,IAAL,CAAX;AACH,OAJD,CAIE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KARD;;AASAL,IAAAA,kBAAkB;AACrB,GAXQ,CAAT;AAaH,CAhBD;;GAAMJ,U;;MAAAA,U;;AAkBN,MAAMY,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,kBAAkB,GAAG,YAAY;AACnC,UAAI;AACA,cAAMZ,GAAG,GAAG,MAAMT,KAAK,CAACsB,GAAN,CAAW,sCAAqCH,KAAK,GAAG,WAAWA,KAAd,GAAsB,EAAG,EAA9E,CAAlB;AACAD,QAAAA,YAAY,CAACT,GAAG,CAACG,IAAL,CAAZ;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAPD;;AAQAQ,IAAAA,kBAAkB;AACrB,GAVQ,EAUN,CAACF,KAAD,CAVM,CAAT;AAWH,CAdD;;IAAMH,oB;;MAAAA,oB;;AAgBN,MAAMX,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,oBAAoB,GAAG,YAAY;AACrC,UAAI;AACA,cAAMhB,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,4CAAX,CAAlB;AACAc,QAAAA,iBAAiB,CAACf,GAAG,CAACG,IAAL,CAAjB;AACH,OAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAPD;;AAQAY,IAAAA,oBAAoB;AACvB,GAVQ,CAAT;AAYH,CAfD;;IAAMpB,Y;;MAAAA,Y;AAiBN,SACIF,SADJ","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst UpdateAll = () => {\r\n    UpdateBest();\r\n    UpdateNewest();\r\n}\r\nconst UpdateBest = () => {\r\n    const [Carousel, setCarousel] = useState([])\r\n\r\n    useEffect(() => {\r\n        const updateBestCarousel = async () => {\r\n            try {\r\n                const res = await axios.put(`http://localhost:4000/api/carousels/rating`).then(\r\n                );\r\n                setCarousel(res.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        updateBestCarousel();\r\n    })\r\n\r\n}\r\n\r\nconst GetHomePageCarousels = () => {\r\n    const [Carousels, setCarousels] = useState([]);\r\n    const [genre, setGenre] = useState(null);\r\n    useEffect(() => {\r\n        const getRandomCarousels = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:4000/api/carousels${genre ? \"genre=\" + genre : \"\"}`);\r\n                setCarousels(res.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        getRandomCarousels();\r\n    }, [genre])\r\n}\r\n\r\nconst UpdateNewest = () => {\r\n    const [NewestCarousel, setNewestCarousel] = useState([])\r\n\r\n    useEffect(() => {\r\n        const updateNewestCarousel = async () => {\r\n            try {\r\n                const res = await axios.put(`http://localhost:4000/api/carousels/newest`);\r\n                setNewestCarousel(res.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        };\r\n        updateNewestCarousel();\r\n    })\r\n\r\n}\r\n\r\nexport {\r\n    UpdateAll\r\n}"]},"metadata":{},"sourceType":"module"}