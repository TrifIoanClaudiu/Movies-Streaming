{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ionut\\\\Career + College\\\\Lucrare Licenta\\\\classic-movies-streaming\\\\client\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"../YoutubeEmbed/YoutubeEmbeded\";\nimport YoutubeEmbed from '../YoutubeEmbed/YoutubeEmbeded';\nimport \"./Card.scss\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  _s();\n\n  let {\n    index,\n    movie\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false);\n  const [item, setItem] = useState({});\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/movies/find/` + movie, {});\n        setItem(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getMovie();\n  }, [movie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      left: isHovered && index * 225 - 50 + index * 2.5\n    },\n    onMouseEnter: () => {\n      setIsHovered(true);\n    },\n    onMouseLeave: () => {\n      setIsHovered(false);\n    },\n    children: isHovered ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n        embedId: item.trailer,\n        useFor: \"Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/moviedetail\",\n        state: {\n          movie: item\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rating\",\n            children: [item.rating, \"\\u2B50\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"desc\",\n          children: item.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre\",\n          children: item.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: item.img,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"J5WFZ0m54UbtGkYrQmMiq2DBRPk=\");\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Ionut/Career + College/Lucrare Licenta/classic-movies-streaming/client/src/components/Card/Card.jsx"],"names":["React","useState","useEffect","YoutubeEmbed","axios","Link","Card","index","movie","isHovered","setIsHovered","item","setItem","getMovie","res","get","data","err","console","log","left","trailer","duration","rating","year","desc","genre","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gCAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,eAAe,SAASC,IAAT,OAAgC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAkB;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAG,YAAY;AACzB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,wCAAD,GAA2CP,KAArD,EAA4D,EAA5D,CAAlB;AAEAI,QAAAA,OAAO,CAACE,GAAG,CAACE,IAAL,CAAP;AACH,OAJD,CAIE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KARD;;AASAJ,IAAAA,QAAQ;AACX,GAXQ,EAWN,CAACL,KAAD,CAXM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AACI,IAAA,KAAK,EAAE;AAAEY,MAAAA,IAAI,EAAEX,SAAS,IAAIF,KAAK,GAAG,GAAR,GAAc,EAAd,GAAmBA,KAAK,GAAG;AAAhD,KADX;AAEI,IAAA,YAAY,EAAE,MAAM;AAAEG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoB,KAF9C;AAGI,IAAA,YAAY,EAAE,MAAM;AAAEA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,KAH/C;AAAA,cAIKD,SAAS,gBACN;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEE,IAAI,CAACU,OAA5B;AAAqC,QAAA,MAAM,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAV;AAA0B,QAAA,KAAK,EAAE;AAAEb,UAAAA,KAAK,EAACG;AAAR,SAAjC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAA,sBAAOA,IAAI,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,uBAA0BX,IAAI,CAACY,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAOZ,IAAI,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBACKb,IAAI,CAACc;AADV;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBACKd,IAAI,CAACe;AADV;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADM,gBAkBN;AAAK,MAAA,GAAG,EAAEf,IAAI,CAACgB,GAAf;AACA,MAAA,GAAG,EAAC;AADJ;AAAA;AAAA;AAAA;AAAA;AAtBR;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA3CuBrB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"../YoutubeEmbed/YoutubeEmbeded\"\r\nimport YoutubeEmbed from '../YoutubeEmbed/YoutubeEmbeded';\r\nimport \"./Card.scss\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Card({ index, movie }) {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [item, setItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getMovie = async () => {\r\n            try {\r\n                const res = await axios.get(`http://localhost:4000/api/movies/find/` + movie, {\r\n                });\r\n                setItem(res.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getMovie()\r\n    }, [movie])\r\n    return (\r\n        <div className='card'\r\n            style={{ left: isHovered && index * 225 - 50 + index * 2.5 }}\r\n            onMouseEnter={() => { setIsHovered(true) }}\r\n            onMouseLeave={() => { setIsHovered(false) }}>\r\n            {isHovered ? (\r\n                <>\r\n                    <YoutubeEmbed embedId={item.trailer} useFor=\"Card\" />\r\n                    <Link to={\"/moviedetail\"} state={{ movie:item }}>\r\n                        <div className=\"cardInfo\">\r\n                            <span>{item.duration}</span>\r\n                            <span className='rating'>{item.rating}‚≠ê</span>\r\n                            <span>{item.year}</span>\r\n\r\n                        </div>\r\n                        <div className=\"desc\">\r\n                            {item.desc}\r\n                        </div>\r\n                        <div className=\"genre\">\r\n                            {item.genre}\r\n                        </div>\r\n                    </Link>\r\n                </>\r\n            ) : <img src={item.img}\r\n                alt=\"\" />}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}